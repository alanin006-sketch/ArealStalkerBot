import os
from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler
from django.conf import settings
from .models import Player, GameState
from .keyboards import *
from .states import *

# –¢–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
SCENE_DESCRIPTIONS = {
    'train_station': """
üöâ *–í–æ–∫–∑–∞–ª –≥–æ—Ä–æ–¥–∞ –•–∞—Ä–º–æ–Ω—Ç*

–¢—ã –≤—ã—Ö–æ–¥–∏—à—å –∏–∑ –¥—É—à–Ω–æ–≥–æ –≤–∞–≥–æ–Ω–∞ –Ω–∞ –ø–µ—Ä—Ä–æ–Ω. –í–æ–∑–¥—É—Ö –ø–∞—Ö–Ω–µ—Ç —É–≥–æ–ª—å–Ω–æ–π –ø—ã–ª—å—é, –¥—ã–º–æ–º –∏ —á–µ–º-—Ç–æ... –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–º. 
–ì–æ—Ä–æ–¥ –≤—ã–≥–ª—è–¥–∏—Ç —Å–µ—Ä—ã–º –∏ —É—Å—Ç–∞–≤—à–∏–º, –Ω–æ –≤ –≥–ª–∞–∑–∞—Ö –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–æ—Ö–æ–∂–∏—Ö —Ç—ã –∑–∞–º–µ—á–∞–µ—à—å —Å—Ç—Ä–∞–Ω–Ω—ã–π –±–ª–µ—Å–∫. 

*"–ò–º–µ–Ω–Ω–æ –∑–¥–µ—Å—å,"* - –¥—É–º–∞–µ—à—å —Ç—ã, *"–≥–¥–µ-—Ç–æ —Ä—è–¥–æ–º —Ç–∞ —Å–∞–º–∞—è –ó–æ–Ω–∞, –æ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ–¥—è—Ç –ª–µ–≥–µ–Ω–¥—ã."*
""",
    
    'bar': """
üçª *–ë–∞—Ä "–£ –ë—É—Ä–±—É–Ω–∞"*

–¢—ã –∑–∞—Ö–æ–¥–∏—à—å –≤ –ø–æ–ª—É—Ç–µ–º–Ω–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ. –í–æ–∑–¥—É—Ö –≥—É—Å—Ç–æ–π –æ—Ç —Ç–∞–±–∞—á–Ω–æ–≥–æ –¥—ã–º–∞ –∏ –∑–∞–ø–∞—Ö–∞ –¥–µ—à–µ–≤–æ–≥–æ –∞–ª–∫–æ–≥–æ–ª—è. 
–ó–∞ —Å—Ç–æ–ª–∏–∫–∞–º–∏ —Å–∏–¥—è—Ç—Å—è –ª—é–¥–∏ —Å —É—Å—Ç–∞–ª—ã–º–∏, –Ω–æ —Ü–µ–ø–∫–∏–º–∏ –≤–∑–≥–ª—è–¥–∞–º–∏. –í —É–≥–ª—É –∫—Ç–æ-—Ç–æ —Ç–∏—Ö–æ –Ω–∞–∏–≥—Ä—ã–≤–∞–µ—Ç –Ω–∞ –≥–∏—Ç–∞—Ä–µ. 

–ë–∞—Ä–º–µ–Ω, –º–∞—Å—Å–∏–≤–Ω—ã–π –º—É–∂—á–∏–Ω–∞ —Å —à—Ä–∞–º–æ–º –Ω–∞ —â–µ–∫–µ, –ª–µ–Ω–∏–≤–æ –ø—Ä–æ—Ç–∏—Ä–∞–µ—Ç —Å—Ç–∞–∫–∞–Ω.
"""
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    
    # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –∏–≥—Ä–æ–∫–∞
    player, created = Player.objects.get_or_create(
        chat_id=chat_id,
        defaults={
            'name': update.effective_user.first_name or '–ù–æ–≤–∏—á–æ–∫',
            'location': 'train_station'
        }
    )
    
    # –°–æ–∑–¥–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
    game_state, _ = GameState.objects.get_or_create(player=player)
    
    if created:
        # –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ - –Ω–∞—á–∞–ª—å–Ω–∞—è —Å—Ü–µ–Ω–∞
        welcome_text = """
*–î–ù–ï–í–ù–ò–ö –ù–û–í–ò–ß–ö–ê*
        
–î–∞—Ç–∞ –ø—Ä–∏–±—ã—Ç–∏—è: –°–µ–≥–æ–¥–Ω—è.
–¶–µ–ª—å: –†–∞–∑–±–æ–≥–∞—Ç–µ—Ç—å –∏–ª–∏ –Ω–∞–π—Ç–∏ —Å–º—ã—Å–ª? –ü–æ–∫–∞ –Ω–µ –∑–Ω–∞—é.

–Ø —Å–ª—ã—à–∞–ª –∏—Å—Ç–æ—Ä–∏–∏ - –æ–¥–Ω–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –∏–∑ –ó–æ–Ω—ã —Å –ø—É—Å—Ç—ã–º–∏ –∫–∞—Ä–º–∞–Ω–∞–º–∏ –∏ –ø–æ–ª–Ω—ã–º–∏ –≥–ª–∞–∑–∞–º–∏ —É–∂–∞—Å–∞. 
–î—Ä—É–≥–∏–µ... –¥—Ä—É–≥–∏–µ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –±–æ–≥–∞—á–∞–º–∏ –≤ –æ–¥–Ω–æ—á–∞—Å—å–µ. "–í—ã–∫–∏–¥—ã—à–∏" –æ–Ω–∏ –Ω–∞–∑—ã–≤–∞—é—Ç —ç—Ç–∏ —à—Ç—É–∫–∏ - –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã, 
–∫–æ—Ç–æ—Ä—ã–µ –º–µ–Ω—è—é—Ç —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å. –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å–≤–æ–¥—è—Ç —Å —É–º–∞.

–ú–Ω–µ –Ω—É–∂–Ω–æ –ø–æ–Ω—è—Ç—å, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å. –ì–æ—Ä–æ–¥ –•–∞—Ä–º–æ–Ω—Ç –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ –≤—Ä–∞—Ç–∞ –≤ –¥—Ä—É–≥–æ–π –º–∏—Ä...
        """
        
        await update.message.reply_text(welcome_text, parse_mode='Markdown')
        await update.message.reply_text(SCENE_DESCRIPTIONS['train_station'], 
                                      parse_mode='Markdown',
                                      reply_markup=get_main_keyboard())
    else:
        # –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∏–≥—Ä—ã
        location_text = SCENE_DESCRIPTIONS.get(player.location, "–¢—ã –æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—à—å—Å—è –≤–æ–∫—Ä—É–≥.")
        await update.message.reply_text(f"*–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –∏–≥—Ä—É*\n\n{location_text}", 
                                      parse_mode='Markdown',
                                      reply_markup=get_main_keyboard())
    
    return ARRIVAL

async def explore_city(update: Update, context: ContextTypes.DEFAULT_TYPE):
    player = Player.objects.get(chat_id=update.effective_chat.id)
    
    exploration_text = """
üèôÔ∏è *–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –•–∞—Ä–º–æ–Ω—Ç–∞*

–ì–æ—Ä–æ–¥ –∂–∏–≤–µ—Ç —Å—Ç—Ä–∞–Ω–Ω–æ–π –∂–∏–∑–Ω—å—é. –ó–¥–µ—Å—å —Å–º–µ—à–∞–ª–∏—Å—å –æ–±—ã—á–Ω—ã–µ –ª—é–¥–∏ –∏ —Ç–µ, –∫—Ç–æ –≤–∏–¥–µ–ª –ó–æ–Ω—É. 
–í –∏—Ö –≤–∑–≥–ª—è–¥–∞—Ö —á–∏—Ç–∞–µ—Ç—Å—è —Ç–æ—Å–∫–∞ –∏ –∂–∞–¥–Ω–æ—Å—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.

*–ö—É–¥–∞ –Ω–∞–ø—Ä–∞–≤–∏—à—å—Å—è?*
"""
    
    await update.message.reply_text(exploration_text, 
                                  parse_mode='Markdown',
                                  reply_markup=get_exploration_keyboard())
    return EXPLORE_CITY

async def go_to_bar(update: Update, context: ContextTypes.DEFAULT_TYPE):
    player = Player.objects.get(chat_id=update.effective_chat.id)
    player.location = 'bar'
    player.save()
    
    await update.message.reply_text(SCENE_DESCRIPTIONS['bar'], 
                                  parse_mode='Markdown',
                                  reply_markup=get_bar_keyboard())
    
    # –ü–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç –≤ –±–∞—Ä - –æ—Å–æ–±—ã–π –¥–∏–∞–ª–æ–≥
    game_state = GameState.objects.get(player=player)
    if 'first_bar_visit' not in game_state.story_flags:
        await update.message.reply_text(
            "–ë–∞—Ä–º–µ–Ω —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ —Ç–µ–±—è –æ—Ü–µ–Ω–∏–≤–∞—é—â–µ: *'–ù–æ–≤–∏—á–æ–∫, –¥–∞? –°–Ω–∞—á–∞–ª–∞ –∫—É–ø–∏, –ø–æ—Ç–æ–º –≤–æ–ø—Ä–æ—Å—ã –∑–∞–¥–∞–≤–∞–π.'*",
            parse_mode='Markdown'
        )
        game_state.story_flags['first_bar_visit'] = True
        game_state.save()
    
    return BAR_CHOICE

async def order_beer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    player = Player.objects.get(chat_id=update.effective_chat.id)
    
    if player.money >= 20:
        player.money -= 20
        player.is_drunk = True
        player.save()
        
        response = """
üç∫ *–¢—ã –∑–∞–∫–∞–∑—ã–≤–∞–µ—à—å –ø–∏–≤–æ*

–ë–∞—Ä–º–µ–Ω —Å—Ç–∞–≤–∏—Ç –ø–µ—Ä–µ–¥ —Ç–æ–±–æ–π –º—É—Ç–Ω—É—é –∫—Ä—É–∂–∫—É. –ü–∏–≤–æ –≥–æ—Ä—å–∫–æ–µ –∏ —Ç–µ–ø–ª–æ–µ, –Ω–æ –ø–æ—Å–ª–µ –¥–æ—Ä–æ–≥–∏ - —Ç–æ —á—Ç–æ –Ω–∞–¥–æ.

*'–ó–∞ –Ω–æ–≤–∏—á–∫–∞!'* - —Ö—Ä–∏–ø–ª–æ —Å–º–µ–µ—Ç—Å—è –∫—Ç–æ-—Ç–æ –∑–∞ —Å–æ—Å–µ–¥–Ω–∏–º —Å—Ç–æ–ª–∏–∫–æ–º. 
–¢–µ–ø–µ—Ä—å –±–∞—Ä–º–µ–Ω —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ —Ç–µ–±—è —á—É—Ç—å –º–µ–Ω–µ–µ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ.
        """
    else:
        response = "üí∏ *–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥.* –ë–∞—Ä–º–µ–Ω –ø—Ä–µ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ —Ö–º—ã–∫–∞–µ—Ç: *'–°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–∞–±–æ—Ç–∞–π, –ø–æ—Ç–æ–º –ø–µ–π.'*"
    
    await update.message.reply_text(response, parse_mode='Markdown')
    return BAR_CHOICE

async def ask_about_zone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    player = Player.objects.get(chat_id=update.effective_chat.id)
    game_state = GameState.objects.get(player=player)
    
    if player.is_drunk or game_state.story_flags.get('first_bar_visit'):
        response = """
üëÇ *–¢—ã —Ä–∞—Å—Å–ø—Ä–∞—à–∏–≤–∞–µ—à—å –æ –ó–æ–Ω–µ*

–ë–∞—Ä–º–µ–Ω –ø–æ–Ω–∏–∂–∞–µ—Ç –≥–æ–ª–æ—Å: *'–°–ª—É—à–∞–π, –Ω–æ–≤–∏—á–æ–∫. –ó–æ–Ω–∞ - –æ–Ω–∞ –Ω–µ –¥–ª—è –ª—é–±–æ–ø—ã—Ç–Ω—ã—Ö. –¢—É–¥–∞ –∏–¥—É—Ç –ª–∏–±–æ –æ—Ç –±–µ–∑—ã—Å—Ö–æ–¥–Ω–æ—Å—Ç–∏, –ª–∏–±–æ –æ—Ç –∂–∞–¥–Ω–æ—Å—Ç–∏.'*

*'–¢–µ–±–µ –Ω—É–∂–µ–Ω –ø—Ä–æ–ø—É—Å–∫. –ò –ø—Ä–æ–≤–æ–¥–Ω–∏–∫. –ë–µ–∑ —ç—Ç–æ–≥–æ - –≤–µ—Ä–Ω–µ—à—å—Å—è –≤ –º–µ—à–∫–µ. –ï—Å–ª–∏ –≤–µ—Ä–Ω–µ—à—å—Å—è.'*

–û–Ω –æ—Ç—Ö–æ–¥–∏—Ç –æ–±—Å–ª—É–∂–∏–≤–∞—Ç—å –¥—Ä—É–≥–∏—Ö –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π, –æ—Å—Ç–∞–≤–ª—è—è —Ç–µ–±—è —Å –º—ã—Å–ª—è–º–∏.
        """
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤—ã–π –∫–≤–µ—Å—Ç
        if 'learned_about_pass' not in game_state.story_flags:
            game_state.story_flags['learned_about_pass'] = True
            game_state.save()
            
    else:
        response = "–ë–∞—Ä–º–µ–Ω –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç —Ç–µ–±—è: *'–°–Ω–∞—á–∞–ª–∞ —Å—Ç–∞–Ω—å –∫–ª–∏–µ–Ω—Ç–æ–º, –ø–æ—Ç–æ–º –ø–æ–≥–æ–≤–æ—Ä–∏–º.'*"
    
    await update.message.reply_text(response, parse_mode='Markdown')
    return BAR_CHOICE

async def show_status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    player = Player.objects.get(chat_id=update.effective_chat.id)
    
    status_text = f"""
üìä *–¢–í–û–ô –°–¢–ê–¢–£–°*

üë§ –ò–º—è: {player.name}
‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: {player.health}/100
üçÄ –£–¥–∞—á–∞: {player.luck}/100
üí∞ –î–µ–Ω—å–≥–∏: {player.money} —Ä—É–±.
‚≠ê –†–µ–ø—É—Ç–∞—Ü–∏—è: {player.reputation}

üìç –õ–æ–∫–∞—Ü–∏—è: {player.get_location_display()}
üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: {len(player.inventory)} –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    """
    
    await update.message.reply_text(status_text, parse_mode='Markdown')
    return ARRIVAL

async def show_inventory(update: Update, context: ContextTypes.DEFAULT_TYPE):
    player = Player.objects.get(chat_id=update.effective_chat.id)
    
    if player.inventory:
        inventory_text = "üéí *–¢–≤–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:*\n" + "\n".join(f"‚Ä¢ {item}" for item in player.inventory)
    else:
        inventory_text = "üéí *–¢–≤–æ–π —Ä—é–∫–∑–∞–∫ –ø—É—Å—Ç.* –ü–æ—Ä–∞ –µ–≥–æ –Ω–∞–ø–æ–ª–Ω–∏—Ç—å!"
    
    await update.message.reply_text(inventory_text, parse_mode='Markdown')
    return ARRIVAL

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é.",
        reply_markup=get_main_keyboard()
    )
    return ARRIVAL
